#Constants
{{$NODES_PER_NAMESPACE := MinInt .Nodes (DefaultParam .NODES_PER_NAMESPACE 1)}}
{{$CL2_WORKLOAD_PER_NAMESPACE := DefaultParam .CL2_WORKLOAD_PER_NAMESPACE 1}}
{{$CL2_PODS_PER_WORKLOAD := DefaultParam .CL2_PODS_PER_WORKLOAD 10}}
{{$CL2_TUNINGSET_QPS := DefaultParam .CL2_TUNINGSET_QPS 5}}
{{$CL2_LISTPODS_QPS := DefaultParam .CL2_LISTPODS_QPS 3}}
{{$CL2_LISTPODS_PER_WORKLOAD := DefaultParam .CL2_LISTPODS_PER_WORKLOAD 1}}
{{$CL2_LISTPODS_IMAGE:= DefaultParam .CL2_LISTPODS_IMAGE "maclonma/podslister:v1.0"}}
{{$LISTPODS_Interval := DefaultParam .LISTPODS_Interval 5}}
{{$MAX_GET_PODS_COUNT := DefaultParam .MAX_GET_PODS_COUNT 5}}
{{$DENSITY_TEST_THROUGHPUT := DefaultParam .DENSITY_TEST_THROUGHPUT 5}}
{{$SCHEDULER_THROUGHPUT_THRESHOLD := DefaultParam .CL2_SCHEDULER_THROUGHPUT_THRESHOLD 0}}
{{$CL2_LATENCY_POD_IMAGE:= DefaultParam .CL2_LATENCY_POD_IMAGE "registry.aliyuncs.com/google_containers/pause:3.2"}}
{{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 0.01}}
{{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 0.03}}
{{$MIN_LATENCY_PODS := 3}}
{{$MIN_SATURATION_PODS_TIMEOUT := 60}}
{{$CL2_ENABLE_KUBEMARK := DefaultParam .CL2_ENABLE_KUBEMARK false}}
{{$CL2_KUBEMARK_NODE_COUNT:= DefaultParam .CL2_KUBEMARK_NODE_COUNT 1}}
{{$USE_SIMPLE_LATENCY_QUERY := DefaultParam .USE_SIMPLE_LATENCY_QUERY false}}
{{$WARM_UP_CLUSTER := DefaultParam .WARM_UP_CLUSTER false}}
{{$ENABLE_RESTART_COUNT_CHECK := DefaultParam .ENABLE_RESTART_COUNT_CHECK true}}
{{$RESTART_COUNT_THRESHOLD_OVERRIDES:= DefaultParam .RESTART_COUNT_THRESHOLD_OVERRIDES ""}}
#Variables
{{$namespaces := DivideInt .Nodes $NODES_PER_NAMESPACE}}
{{$warmUpNamespaces := DivideInt $namespaces 10}}
{{$warmPodsPerNamespace := 10}}
{{$sleepDuration := "10s"}}
{{$kubemarkReplicationControllerSpec := DefaultParam .KUBEMARK_ReplicationController_SPEC "kubemark-rc.yaml"}}
{{$listpodsDeploymentSpec := DefaultParam .LISTPODS_DEPLOYMENT_SPEC "podslister-deployment.yaml"}}
{{$latencyDeploymentSpec := DefaultParam .LATENCY_DEPLOYMENT_SPEC "deployment.yaml"}}
{{$API_AVAILABILITY_PERCENTAGE_THRESHOLD := DefaultParam .CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD 99.5}}
{{$CUSTOM_ALLOWED_CONTAINER_RESTARTS := DefaultParam .CL2_CUSTOM_ALLOWED_CONTAINER_RESTARTS ""}}



name: kube-apiserver
namespace:
  number: {{$namespaces}}
tuningSets:
- name: UniformQPS01
  qpsLoad:
    qps: {{$CL2_TUNINGSET_QPS}}
- name: ListPodsQPS02
  qpsLoad:
    qps: {{$CL2_LISTPODS_QPS}}
steps:
{{if $WARM_UP_CLUSTER}}
- name: Starting warming up pod measurements
  measurements:
  - Identifier: WaitForRunningWarnUpDeployments
    Method: WaitForControlledPodsRunning
    Params:
      action: start
      apiVersion: apps/v1
      kind: Deployment
      labelSelector: group = warmup
      operationTimeout: 15m

- name: Creating warming up pods
  phases:
  - namespaceRange:
      min: 1
      max: {{$warmUpNamespaces}}
    replicasPerNamespace: 1
    tuningSet: UniformQPS01
    objectBundle:
    - basename: warmup-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}
      templateFillMap:
        Replicas: {{$warmPodsPerNamespace}}
        Group: latency
        CpuRequest: {{$LATENCY_POD_CPU}}m
        MemoryRequest: {{$LATENCY_POD_MEMORY}}M
{{end}}

- name: Starting measurements
  measurements:
  - Identifier: APIResponsivenessPrometheus
    Method: APIResponsivenessPrometheus
    Params:
      action: start
  - Identifier: APIResponsivenessPrometheusSimple
    Method: APIResponsivenessPrometheus
    Params:
      action: start
  - Identifier: APIAvailability
    Method: APIAvailability
    Params:
      action: start
      pollFrequency: "3s"
      hostPollTimeoutSeconds: 5
      threshold: {{$API_AVAILABILITY_PERCENTAGE_THRESHOLD}}
  - Identifier: ContainerRestarts kube-apiserver
    Method: ContainerRestarts
    Params:
      action: start
      container: kube-apiserver
      enableViolations: true
      defaultAllowedRestarts: 1
      customAllowedRestarts: {{YamlQuote $CUSTOM_ALLOWED_CONTAINER_RESTARTS 4}}
  - Identifier: ContainerRestarts kube-controller-manager
    Method: ContainerRestarts
    Params:
      action: start
      container: kube-controller-manager
      enableViolations: true
      defaultAllowedRestarts: 1
      customAllowedRestarts: {{YamlQuote $CUSTOM_ALLOWED_CONTAINER_RESTARTS 4}}
  - Identifier: ContainerRestarts kube-scheduler
    Method: ContainerRestarts
    Params:
      action: start
      container: kube-scheduler
      enableViolations: true
      defaultAllowedRestarts: 1
      customAllowedRestarts: {{YamlQuote $CUSTOM_ALLOWED_CONTAINER_RESTARTS 4}}
  - Identifier: ContainerCPU
    Method: GenericPrometheusQuery
    Params:
      action: start
      metricName: ContainerCPU
      metricVersion: v1
      unit: cores
      dimensions:
        - container
      queries:
        - name: max
          query: max(max_over_time(rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m])[%v:]))
          requireSamples: true
        - name: Perc99
          query: max(quantile_over_time(0.99, (rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m]))[%v:]))
          requireSamples: true
        - name: Perc90
          query: max(quantile_over_time(0.90, (rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m]))[%v:]))
          requireSamples: true
        - name: Perc50
          query: max(quantile_over_time(0.50, (rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m]))[%v:]))
          requireSamples: true
  - Identifier: ContainerMemory
    Method: GenericPrometheusQuery
    Params:
      action: start
      metricName: ContainerMemory
      metricVersion: v1
      unit: MiB
      dimensions:
        - container
      queries:
        - name: max
          query: max(max_over_time((container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:])))
          requireSamples: true
        - name: Perc99
          query: max(quantile_over_time(0.99, (container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
          requireSamples: true
        - name: Perc90
          query: max(quantile_over_time(0.90, (container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
          requireSamples: true
        - name: Perc50
          query: max(quantile_over_time(0.50, (container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
          requireSamples: true

- name: Starting list/get pod measurements
  measurements:
    - Identifier: WaitForRunningListpodsDeployments
      Method: WaitForControlledPodsRunning
      Params:
        action: start
        apiVersion: apps/v1
        kind: Deployment
        labelSelector: group = listpods
        operationTimeout: 1m

- name: Creating list/get pods
  phases:
    - namespaceRange:
        min: 1
        max: {{$namespaces}}
      replicasPerNamespace: {{$CL2_LISTPODS_QPS}}
      tuningSet: ListPodsQPS02
      objectBundle:
        - basename: listpods-deployment
          objectTemplatePath: {{$listpodsDeploymentSpec}}
          templateFillMap:
            Replicas: {{$CL2_LISTPODS_PER_WORKLOAD}}
            Group: listpods
            Image: {{$CL2_LISTPODS_IMAGE}}
            CpuRequest: 10m
            MemoryRequest: 64M
            MaxPodsCount: {{$MAX_GET_PODS_COUNT}}
            ListInterval: {{$LISTPODS_Interval}}

- name: Waiting for list/get pods to be running
  measurements:
    - Identifier: WaitForRunningListpodsDeployments
      Method: WaitForControlledPodsRunning
      Params:
        action: gather

- name: Creating latency pods round 1
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$CL2_WORKLOAD_PER_NAMESPACE}}
    tuningSet: UniformQPS01
    objectBundle:
    - basename: latency-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}
      templateFillMap:
        Image: {{$CL2_LATENCY_POD_IMAGE}}
        Replicas: {{$CL2_PODS_PER_WORKLOAD}}
        Group: latency
        CpuRequest: {{$LATENCY_POD_CPU}}m
        MemoryRequest: {{$LATENCY_POD_MEMORY}}M

- name: Sleep
  measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: {{$sleepDuration}}

- name: Deleting latency pods round 1
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: UniformQPS01
    objectBundle:
    - basename: latency-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}

- name: Sleep
  measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: {{$sleepDuration}}

- name: Creating latency pods round 2
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$CL2_WORKLOAD_PER_NAMESPACE}}
    tuningSet: UniformQPS01
    objectBundle:
    - basename: latency-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}
      templateFillMap:
        Image: {{$CL2_LATENCY_POD_IMAGE}}
        Replicas: {{$CL2_PODS_PER_WORKLOAD}}
        Group: latency
        CpuRequest: {{$LATENCY_POD_CPU}}m
        MemoryRequest: {{$LATENCY_POD_MEMORY}}M

- name: Sleep
  measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: {{$sleepDuration}}

- name: Deleting latency pods round 2
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: UniformQPS01
    objectBundle:
    - basename: latency-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}

- name: Sleep
  measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: {{$sleepDuration}}

- name: Creating latency pods round 3
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$CL2_WORKLOAD_PER_NAMESPACE}}
    tuningSet: UniformQPS01
    objectBundle:
    - basename: latency-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}
      templateFillMap:
        Image: {{$CL2_LATENCY_POD_IMAGE}}
        Replicas: {{$CL2_PODS_PER_WORKLOAD}}
        Group: latency
        CpuRequest: {{$LATENCY_POD_CPU}}m
        MemoryRequest: {{$LATENCY_POD_MEMORY}}M

- name: Sleep
  measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: {{$sleepDuration}}

- name: Deleting latency pods round 3
  phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: UniformQPS01
    objectBundle:
    - basename: latency-deployment
      objectTemplatePath: {{$latencyDeploymentSpec}}

- name: Sleep
  measurements:
    - Identifier: sleep
      Method: Sleep
      Params:
        duration: {{$sleepDuration}}

- name: Deleting list/get pods
  phases:
    - namespaceRange:
        min: 1
        max: {{$namespaces}}
      replicasPerNamespace: 0
      tuningSet: UniformQPS01
      objectBundle:
        - basename: listpods-deployment
          objectTemplatePath: {{$listpodsDeploymentSpec}}

- name: Waiting for list/get pods to be deleted
  measurements:
    - Identifier: WaitForRunningListpodsDeployments
      Method: WaitForControlledPodsRunning
      Params:
        action: gather

{{if $WARM_UP_CLUSTER}}
- name: Deleting warming up pods
  phases:
    - namespaceRange:
        min: 1
        max: {{$warmUpNamespaces}}
      replicasPerNamespace: 0
      tuningSet: UniformQPS01
      objectBundle:
        - basename: warmup-deployment
          objectTemplatePath: {{$latencyDeploymentSpec}}
{{end}}

- name: Collecting measurements
  measurements:
  - Identifier: APIResponsivenessPrometheusSimple
    Method: APIResponsivenessPrometheus
    Params:
      action: gather
      enableViolations: true
      useSimpleLatencyQuery: true
      summaryName: APIResponsivenessPrometheus_simple
  {{if not $USE_SIMPLE_LATENCY_QUERY}}
  - Identifier: APIResponsivenessPrometheus
    Method: APIResponsivenessPrometheus
    Params:
      action: gather
  {{end}}
  - Identifier: APIAvailability
    Method: APIAvailability
    Params:
      action: gather
      pollFrequency: "3s"
      hostPollTimeoutSeconds: 3
      threshold: {{$API_AVAILABILITY_PERCENTAGE_THRESHOLD}}
  - Identifier: ContainerRestarts kube-apiserver
    Method: ContainerRestarts
    Params:
      action: gather
      container: kube-apiserver
      enableViolations: true
      defaultAllowedRestarts: 1
      customAllowedRestarts: {{YamlQuote $CUSTOM_ALLOWED_CONTAINER_RESTARTS 4}}
  - Identifier: ContainerRestarts kube-controller-manager
    Method: ContainerRestarts
    Params:
      action: gather
      container: kube-controller-manager
      enableViolations: true
      defaultAllowedRestarts: 1
      customAllowedRestarts: {{YamlQuote $CUSTOM_ALLOWED_CONTAINER_RESTARTS 4}}
  - Identifier: ContainerRestarts kube-scheduler
    Method: ContainerRestarts
    Params:
      action: gather
      container: kube-scheduler
      enableViolations: true
      defaultAllowedRestarts: 1
      customAllowedRestarts: {{YamlQuote $CUSTOM_ALLOWED_CONTAINER_RESTARTS 4}}
  - Identifier: ContainerCPU
    Method: GenericPrometheusQuery
    Params:
      action: gather
      enableViolations: true
#      metricName: ContainerCPU
#      metricVersion: v1
#      unit: cores
#      dimensions:
#        - container
#      queries:
#        - name: max
#          query: max(max_over_time(rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m])[%v:]))
#          requireSamples: true
#        - name: Perc99
#          query: max(quantile_over_time(0.99, (rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m]))[%v:]))
#          requireSamples: true
#        - name: Perc90
#          query: max(quantile_over_time(0.90, (rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m]))[%v:]))
#          requireSamples: true
#        - name: Perc50
#          query: max(quantile_over_time(0.50, (rate(container_cpu_usage_seconds_total{container="kube-apiserver",endpoint="kubelet"}[1m]))[%v:]))
#          requireSamples: true
  - Identifier: ContainerMemory
    Method: GenericPrometheusQuery
    Params:
      action: gather
      enableViolations: true
#      metricName: ContainerMemory
#      metricVersion: v1
#      unit: MiB
#      dimensions:
#        - container
#      queries:
#        - name: max
#          query: max(max_over_time((container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
#          requireSamples: true
#        - name: Perc99
#          query: max(quantile_over_time(0.99, (container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
#          requireSamples: true
#        - name: Perc90
#          query: max(quantile_over_time(0.90, (container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
#          requireSamples: true
#        - name: Perc50
#          query: max(quantile_over_time(0.50, (container_memory_working_set_bytes{container="kube-apiserver",endpoint="kubelet"} / 1024 / 1024)[%v:]))
#          requireSamples: true
